now I use requirements.txt and conda-requirements from https://github.com/thedataincubator/flask-demo but with this switch to reduce the slugsize under 300M

final working requirements.txt before (with no conda-requirements.txt):




________________________________

can add conda-requirements.txt with this command, but I can’t get it to work:
	conda list -e >> conda-requirements.txt

numpy==1.12.1

scipy==0.19.0
scikit-learn==0.13.1

setuptools==35.0.2

matplotlib==2.0.0 #1.3.0, 1.5.3

scikit-learn==0.13.1

https://github.com/dbrgn/heroku-buildpack-python-sklearn/
https://github.com/kennethreitz/conda-buildpack.git

Flask==0.12
gunicorn==19.7.1
numpy==1.12.1
matplotlib==2.0.0 

gunicorn==19.7.1
numpy==1.11.1
matplotlib==2.0.0

web: gunicorn gettingstarted.wsgi --log-file -


git commit -m “after purging heroku, adding back in scikit-learn and reverting to gunicorn 17.5 since it doesn’t run after successful deployment”


scipy #=0.19.0-np111py27_nomkl_0
numpy #=m1.11.3-py27_nomkl_0
scikit-learn #=0.18.1-np111py27_nomkl_1

cleaned up conda-reqs since numpy still not recognized, removed scikit-learn for now (it was 299M out of 300M anyways)

adding numpy, matplotlib, spicy, sklearn back to main req.txt

nomkl
scipy
numpy
scikit-learn
pandas
bokeh

added everything just to req.txt and put conda_req in .gitignore
put 


dill==0.2.1
Flask==0.12
gunicorn==17.5
Jinja2==2.7.2
oauth==1.0.1
oauthlib==0.7.2
requests>=2.2.1
simplejson==3.8.0
numpy==1.7.0
matplotlib==1.1.0
scipy==0.11.0
scikit-learn==0.13.1
plotly==1.8.6
pandas==0.19.2
bokeh==0.12.5

completely removed app from herokyu, worried that sklearn BUILDPACK is not enough so I put back the conda one and cmpletely removed app from heroku with heroku repo:reset -a censusdataapp

removed numpy version in req.txt, removed sklearn BUILDPACK

just get local file to run!!!!


try to make whole new heroku app with exact specs of https://github.com/thedataincubator/flask-demo:

	conda-requirements.txt: 
	scipy
	numpy
	pandas
	bokeh 

	requirements.txt:
	dill==0.2.1
	Flask==0.10.1
	gunicorn==19.3.0
	Jinja2==2.7.2
	oauth==1.0.1
	oauthlib==0.7.2
	requests>=2.2.1
	simplejson==3.8.0


1a) if too big: remove stuff, make sure it runs once pushed to heroku
2a) if no, change versions
2b) if yes, play with nomkl and —-no-deps

nomkl makes it 260M!! 

gunicorn==19.3.0 to gunicorn==17.5

this made it 171.7M!! however, can’t import numpy…

going back to gunicorn==19.3.0

???:
try gunicorn==17.5 but remove nomkl?? (will remove space and make it like flask-demo above)

if too big: remove stuff (including numpy if needed!!), make sure it runs once pushed to heroku

add numpy==1.7.0 to requirements.txt. Is this due to not cleaning out heroku??
	remote:        Installing collected packages: numpy
	remote:          Found existing installation: numpy 1.12.1
	remote:            Uninstalling numpy-1.12.1:
	remote:              Successfully uninstalled numpy-1.12.1
	remote:        Successfully installed numpy-1.7.0

it gets numpy now (and at 206M), now adding matplotlib==1.1.0
->225M, but now no plotly==1.8.6

add plotly==1.8.6
-> now at 210M (??)

________________________________


yeah, got it back!!!!!!! (Currently 210M)

try to remove conda-requirements altogether, then add in pandas and bokeh locally (+ sklearn?)

can also:
	1) play with nomkl and —-no-deps



it works again, now with no conda-requirements file!! will now delete it externally then re-create locally


just added scipy, now 255M


I had numpy==1.7.0 but sudoku recommended for scipy I use at least 1.8.2, so I have removed scipy and now am trying numpy==1.11.3
-> it worked, now 273M!!!!


trying to add back in scipy==0.19.0, now only 258M (??). yay it worked!!!


trying to add “import scipy” to census_data.py


try to add pandas to requirements.txt
-> now 277.6M, it worked!!

adding “import pandas” and using simply function to census_data.py
-> now 277.5M, it worked!!

try to add sklearn==0.18.1 to requirements.txt
->

add “import sklearn: and add simple sklearn function
->now  313.9M, worked!!!

removed scikit-learn, now just trying to re-cache heroku








can: 
	trying to use matplotlib=2.0.0
